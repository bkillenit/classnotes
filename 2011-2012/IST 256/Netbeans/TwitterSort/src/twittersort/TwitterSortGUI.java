/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package twittersort;

import java.net.URL;
import java.io.*;
import java.util.*;
 
import org.apache.commons.io.IOUtils;
import org.apache.commons.io.output.ByteArrayOutputStream;
import org.json.JSONArray;
import org.json.JSONObject;
import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author BlaineKillen
 */
public class TwitterSortGUI extends javax.swing.JFrame {

    /**
     * Creates new form TwitterSortGUI
     */
    public TwitterSortGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 153, 255));

        jLabel2.setText("Enter hashtag");

        jButton1.setText("Sort");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("User ID");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("A - Z");

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Z - A");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jLabel3.setText("Results:");

        jButton2.setText("Save Results");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(31, 31, 31)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jRadioButton1)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jRadioButton3)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(68, 68, 68)
                                .add(jRadioButton4))
                            .add(layout.createSequentialGroup()
                                .add(18, 18, 18)
                                .add(jButton1)
                                .add(18, 18, 18)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jButton4)
                                    .add(jButton2)))))
                    .add(layout.createSequentialGroup()
                        .add(64, 64, 64)
                        .add(jLabel3)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(9, 9, 9)
                .add(jButton4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(jButton1)
                    .add(jButton2))
                .add(28, 28, 28)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jRadioButton1)
                    .add(jRadioButton3)
                    .add(jRadioButton4))
                .add(39, 39, 39)
                .add(jLabel3)
                .addContainerGap(640, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

String display = "<html>Results: <p>", hashtag, ID;
int dayDate,monthDate,yearDate, retweet, id;
String username;  
int count = 0;


Twitter twitterData [] = new Twitter[60];

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        hashtag = jTextField1.getText();
        
        URL url;
        
        String tweetDate, tweetText;
        int maxPage = 4;
        Twitter twitterDisplay; 
        int tweetcount = 0;
        
        if (hashtag.length() != 0)
        {    
        try
        {    
        
        for (int page = 1; page <= maxPage; page++)
        {   
            url= new URL("http://search.twitter.com/search.json?q=%23"
                    + hashtag + "&page=" + page);
            ByteArrayOutputStream urlOutputStream = new ByteArrayOutputStream();
            IOUtils.copy(url.openStream(), urlOutputStream);
            String urlContents = urlOutputStream.toString();

            // parse the JSON object returned
            JSONObject jsonO = new JSONObject(urlContents);
            //System.out.println(jsonO.toString());
            JSONArray jsonArray=jsonO.getJSONArray("results");
            // for each item in the results, get the tweet id, the data, the tweet and the user
            for (int i = 0; i < jsonArray.length(); i++) 
            {
                count ++;
                JSONObject jsonObject = jsonArray.getJSONObject(i);
                //System.out.println(jsonObject.toString());
                username = jsonObject.getString("from_user");
                id = jsonObject.getInt("id");
                
                tweetText = jsonObject.getString("text");
                tweetDate = jsonObject.getString("created_at");
                
                Twitter info = new Twitter(username, id, tweetDate, tweetText); 
                
                twitterData[i + tweetcount] = info;
                
            }
            
             
            tweetcount = tweetcount + jsonArray.length();
            
        }
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
        }
        else
        {
            System.out.println("Please enter a hashtag");
        }    
        
        if (jRadioButton3.isSelected())
        {
            
            for (int i = 0; i < count; i++ )
        {
            // the inner loop iterates over elements of the array in the interval,
            //    which decreases in size by 1 each pass
            for (int j = 0;  j < (count - (i+1)); j++)
            {
                // for each student in the array, compare the name fields
                //   using the String compareTo method
                // returns negative number if less and positive number if more
                if ((twitterData[j].getUserName().toLowerCase().compareTo
                        (twitterData[j+1].getUserName().toLowerCase())) > 0)
                {
                    Twitter tempUser; 
                    
                    tempUser = twitterData[j];
                    twitterData[j] = twitterData[j+1];
                    twitterData[j+1] = tempUser;
                }

            }
        }
            
        }   
        
        if (jRadioButton4.isSelected())
        {
            for (int i = 0; i < count; i++ )
        {
            // the inner loop iterates over elements of the array in the interval,
            //    which decreases in size by 1 each pass
            for (int j = 0;  j < (count - (i+1)); j++)
            {
                // for each student in the array, compare the name fields
                //   using the String compareTo method
                // returns negative number if less and positive number if more
                if ((twitterData[j].getUserName().toLowerCase().compareTo
                        (twitterData[j+1].getUserName().toLowerCase())) < 0)
                {
                    Twitter tempUser;
                    
                    tempUser= twitterData[j];
                    twitterData[j] = twitterData[j+1];
                    twitterData[j+1] = tempUser;
                }

            }
        } 
            
            
        }
        
        if (jRadioButton1.isSelected())
        {
            
            for (int i = 0; i < count; i++ )
        {
            // the inner loop iterates over elements of the array in the interval,
            //    which decreases in size by 1 each pass
            for (int j = 0;  j < (count - (i+1)); j++)
            {
                // for each student in the array, compare the name fields
                //   using the String compareTo method
                // returns negative number if less and positive number if more
                if ((twitterData[j].getID() > twitterData[j+1].getID()))
                {
                    Twitter tempUser; 
                    
                    tempUser = twitterData[j];
                    twitterData[j] = twitterData[j+1];
                    twitterData[j+1] = tempUser;
                }

            }
        }
            
        }
        
        for (int i = 0; i < count ; i++)
        {
            
            
            display = display + "<p>" + twitterData[i].toString() ;
            
        }    
        
        jLabel3.setText(String.valueOf(display));
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        display = "";
        hashtag= "";
        ID= "";
        username = "";
        jLabel3.setText("Results: ");
        buttonGroup1.clearSelection();
        jTextField1.setText("");
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
    //Create a file chooser
    final JFileChooser fc = new JFileChooser();
    
    int returnVal = fc.showOpenDialog(null);
   
        
         try{
            
            // construct bufferedwriter here
            BufferedWriter bv = new BufferedWriter (new FileWriter(fc.getSelectedFile()));
            // start writing output
            File twitter =new File(hashtag);
            
            //start write and check if user has searched the hastag before
            if (display.isEmpty())
            {
                
               System.out.println("No data exist to be written.");
                
            }
            else
            {
              bv.write("Hashtag: " + hashtag);
              bv.newLine();
              bv.write("");
              bv.newLine();
              bv.write("");
                      
              
              for(int i = 0; i < count; i++)
              {
                  bv.newLine();
                  bv.write(twitterData[i].toString());
                  
              }    
                
            }    
                
                    
         }        
                    
                catch(Exception e) {
                        
                    System.out.println(e.getMessage());
                        } 
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TwitterSortGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TwitterSortGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TwitterSortGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TwitterSortGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TwitterSortGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
